name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Cheap OS-agnostic checks
  ci-hygiene:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup-rust
        with:
          platform: ubuntu-latest
          cache-key: debug
          tools: cargo-shear
          nightly-rustfmt: true

      - uses: ./.github/actions/setup-node

      - name: Check formatting
        run: pnpm format:check

      - name: Check unused cargo dependencies
        run: cargo shear

      - name: Check that auto-generated files are up-to-date
        env:
          RUST_BACKTRACE: 1
        shell: bash
        run: |
          # Re-generate auto-generated files
          pnpm build:packages
          pnpm build:schema
          cargo gen bindings

          # Check that there are no uncommitted changes
          set -euo pipefail
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error::Auto-generated files are out of date"
            echo "::group::Diff of auto-generated files"
            git status --porcelain
            echo
            git --no-pager diff || true
            echo "::endgroup::"
            echo "To fix this issue, run the following commands and commit the changes:"
            echo "  pnpm build:packages"
            echo "  pnpm build:schema"
            echo "  cargo gen bindings"
            exit 1
          fi

  # Platform-dependent checks
  ci-verify:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup-rust
        with:
          platform: ${{ matrix.platform }}
          cache-key: debug
          components: clippy

      - uses: ./.github/actions/setup-node

      - name: Check linting
        run: pnpm lint:check

      - name: Run test suite
        env:
          RUST_BACKTRACE: 1
        run: pnpm test

  ci-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup-rust
        with:
          platform: ${{ matrix.platform }}
          cache-key: release

      - uses: ./.github/actions/setup-node

      - name: Build Deskulpt
        id: build-deskulpt
        uses: tauri-apps/tauri-action@v0

      - name: Upload build artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.platform }}
          path: "${{ join(fromJSON(steps.build-deskulpt.outputs.artifactPaths), '\n') }}"

  ci-conclude:
    needs: [ci-hygiene, ci-verify, ci-build]
    runs-on: ubuntu-latest

    steps:
      - name: Conclude
        shell: bash
        run: echo "âœ… CI pipeline completed successfully!"
