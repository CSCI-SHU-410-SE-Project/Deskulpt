name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUST_BACKTRACE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-repo-check:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup
        with:
          platform: ${{ matrix.platform }}
          format: ${{ matrix.platform == 'ubuntu-latest' }}
          lint: true

      - name: Check formatting
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: pnpm format:check && taplo format --check --diff

      - name: Check linting
        run: pnpm lint:check

      - name: Regenerate auto-generated files
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          rm -r src/bindings/
          pnpm build:packages
          pnpm build:bindings

      - name: Check that auto-generated files are up to date
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "$(git status --porcelain)" ]; then
            echo "::group::Uncommitted changes after regenerating auto-generated files"
            git status --porcelain
            echo
            git --no-pager diff || true
            echo "::endgroup::"
            echo "::error::Auto-generated files are out of date"
            echo "To fix this issue, run the following commands and commit the changes:"
            echo "  pnpm build:packages"
            echo "  pnpm build:bindings"
            echo "If the issue persists, try removing the src/bindings/ directory and run again."
            exit 1
          fi

  ci-test:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup
        with:
          platform: ${{ matrix.platform }}

      - name: Run test suite
        run: pnpm test

  ci-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: ./.github/actions/setup
        with:
          platform: ${{ matrix.platform }}

      - name: Build Deskulpt
        id: build-deskulpt
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.platform }}
          path: "${{ join(fromJSON(steps.build-deskulpt.outputs.artifactPaths), '\n') }}"
