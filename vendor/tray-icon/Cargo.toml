# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
autobenches  = false
autobins     = false
autoexamples = false
autolib      = false
autotests    = false
build        = false
categories   = ["gui"]
description  = "Create tray icons for desktop applications"
edition      = "2021"
homepage     = "https://github.com/tauri-apps/tray-icon"
license      = "MIT OR Apache-2.0"
name         = "tray-icon"
readme       = "README.md"
repository   = "https://github.com/tauri-apps/tray-icon"
rust-version = "1.71"
version      = "0.21.0"

[features]
common-controls-v6 = ["muda/common-controls-v6"]
default            = ["libxdo"]
libxdo             = ["muda/libxdo"]
serde              = ["muda/serde", "dep:serde"]

[lib]
name = "tray_icon"
path = "src/lib.rs"

[[example]]
name = "egui"
path = "examples/egui.rs"

[[example]]
name = "tao"
path = "examples/tao.rs"

[[example]]
name = "winit"
path = "examples/winit.rs"

[dependencies.crossbeam-channel]
version = "0.5"

[dependencies.muda]
default-features = false
features         = ["gtk"]
version          = "0.17"

[dependencies.once_cell]
version = "1"

[dependencies.serde]
optional = true
version  = "1"

[dependencies.thiserror]
version = "2"

[dev-dependencies.eframe]
version = "0.31"

[dev-dependencies.image]
version = "0.25"

[dev-dependencies.serde_json]
version = "1"

[dev-dependencies.tao]
version = "0.33"

[dev-dependencies.winit]
version = "0.30"

[target.'cfg(any(target_os = "linux", target_os = "macos"))'.dependencies.png]
version = "0.17"

[target.'cfg(target_os = "linux")'.dependencies.dirs]
version = "6"

[target.'cfg(target_os = "linux")'.dependencies.libappindicator]
version = "0.9"

[target.'cfg(target_os = "linux")'.dev-dependencies.gtk]
version = "0.18"

[target.'cfg(target_os = "macos")'.dependencies.objc2]
version = "0.6"

[target.'cfg(target_os = "macos")'.dependencies.objc2-app-kit]
default-features = false
features = [
  "std",
  "objc2-core-foundation",
  "NSButton",
  "NSCell",
  "NSControl",
  "NSEvent",
  "NSImage",
  "NSMenu",
  "NSResponder",
  "NSStatusBar",
  "NSStatusBarButton",
  "NSStatusItem",
  "NSTrackingArea",
  "NSView",
  "NSWindow",
]
version = "0.3"

[target.'cfg(target_os = "macos")'.dependencies.objc2-core-foundation]
default-features = false
features         = ["std", "CFCGTypes", "CFRunLoop"]
version          = "0.3"

[target.'cfg(target_os = "macos")'.dependencies.objc2-core-graphics]
default-features = false
features         = ["std", "CGDirectDisplay"]
version          = "0.3"

[target.'cfg(target_os = "macos")'.dependencies.objc2-foundation]
default-features = false
features = [
  "std",
  "block2",
  "objc2-core-foundation",
  "NSArray",
  "NSData",
  "NSEnumerator",
  "NSGeometry",
  "NSString",
  "NSThread",
]
version = "0.3"

[target.'cfg(target_os = "windows")'.dependencies.windows-sys]
features = [
  "Win32_UI_WindowsAndMessaging",
  "Win32_Foundation",
  "Win32_System_SystemServices",
  "Win32_Graphics_Gdi",
  "Win32_UI_Shell",
]
version = "0.59"
