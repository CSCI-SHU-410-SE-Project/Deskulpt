/*! Auto-generated by xtask-gen. DO NOT EDIT! */

import { invoke } from "@tauri-apps/api/core";
import * as tauriEvent from "@tauri-apps/api/event";

// =============================================================================
// Types
// =============================================================================

{{#each types}}
{{this}}
{{#unless @last}}

{{/unless}}
{{/each}}

// =============================================================================
// Events
// =============================================================================

function makeEvent<T>(name: string) {
  return {
    /** Listen for the event. */
    listen: (cb: tauriEvent.EventCallback<T>, options?: tauriEvent.Options) =>
      tauriEvent.listen(name, cb, options),
    /** Listen once for the event. */
    once: (cb: tauriEvent.EventCallback<T>, options?: tauriEvent.Options) =>
      tauriEvent.once(name, cb, options),
    /** Emit the event to all targets. */
    emit: (payload: T) => tauriEvent.emit(name, payload),
    /** Emit the event to a specific Deskulpt window. */
    emitTo: (window: DeskulptWindow, payload: T) =>
      tauriEvent.emitTo(window, name, payload),
  };
}

export const events = {
{{#each events}}
  {{this.key}}: makeEvent<{{this.ty}}>("{{this.name}}"),
{{/each}}
};

// =============================================================================
// Commands
// =============================================================================

export const commands = {
{{#each commands}}
  {{@key}}: {
{{#each this}}
{{indent doc 4}}
    {{this.key}}: ({{#if this.args}}
{{#each this.args}}
      {{this.name}}: {{this.ty}},
{{/each}}
    {{/if}}) => invoke<{{this.ret_ty}}>("plugin:{{this.plugin_name}}|{{this.name}}"{{#if this.args}}, {
{{#each this.args}}
      {{this.name}},
{{/each}}
    }{{/if}}),
{{#unless @last}}

{{/unless}}
{{/each}}
  },
{{/each}}
};
